/* KlupplistaManager.module.css */

.klupplistaContainer {
    padding: 1rem;
    max-width: 95%; /* Adjust as needed */
    margin: 1rem auto;
  }
  
  .klupplistaContainer h1 {
      text-align: center;
      margin-bottom: 1rem;
      color: #333;
  }
  
  .klupplistaContainer .header {
      display: flex;
      justify-content: space-between;
      align-items: center; /* Align button to the right */
      margin-bottom: 1rem;
  }
  
  .createButton {
      background-color: #28a745;
      color: white;
      padding: 0.6rem 1rem;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1rem;
      transition: background-color 0.2s ease;
  }
  .createButton:hover {
      background-color: #218838;
  }
  
  .tableContainer {
    overflow-x: auto; /* Allow horizontal scrolling on small screens */
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    background-color: #fff;
  }
  
  th, td {
    border: 1px solid #ddd;
    padding: 0.8rem;
    text-align: center;
    font-size: 0.95rem;
  }
  
  th {
    background-color: #f2f2f2;
    font-weight: bold;
    cursor: pointer; /* If adding sorting later */
  }
  
  tr:nth-child(even) {
    background-color: #f9f9f9;
  }
  
  tr:hover {
    background-color: #f1f1f1;
  }
  
  .draggableRow {
    cursor: grab; /* Indicate draggable */
  }
  .draggableRow:active {
      cursor: grabbing;
  }
  
  .positionCell {
      width: 80px; /* Fixed width for position column */
      text-align: center;
  }
  
  .moveButton {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    padding: 0 5px;
    color: #007bff;
    padding-bottom: 5px;
  }
  .moveButton:disabled {
      color: #ccc;
      cursor: not-allowed;
  }
  .moveButton:hover:not(:disabled) {
      color: #0056b3;
  }
  
  /* Loading and Error Styles */
  .loading, .error, .noItems {
      text-align: center;
      padding: 1rem;
      margin: 1rem auto;
      border-radius: 4px;
      max-width: 600px;
  }
  .loading { color: #555; }
  .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
  .noItems { color: #777; font-style: italic; }


  .orderLink {
    text-decoration: none;
    outline: 1px solid #007bff;
    padding: 5px 5px;
    border-radius: 3px;
    min-width: 30px;
    display: inline-block;
    text-align: center;
  }
  
  .orderLink:hover {
    background-color: #007bff;
    color: #eee;
  }


  .editInput {
    width: 95%; /* Adjust width as needed */
    padding: 4px 6px; /* Smaller padding */
    font-size: inherit; /* Inherit font size from table cell */
    border: 1px solid #007bff; /* Highlight editing */
    border-radius: 3px;
    box-sizing: border-box; /* Include padding/border in width */
    /* Remove default browser appearance if needed */
    appearance: none;
    background-color: #f0f8ff; /* Light background while editing */
}

/* Make the span clickable */
td span {
    cursor: pointer;
    display: inline-block; /* Allow clicking the full area */
    min-width: 20px; /* Ensure even empty cells are clickable */
    min-height: 1em;
    padding: 2px; /* Slight padding for easier clicking */
    border-radius: 2px;
    text-align: center;
}

td span:hover {
    background-color: #e9ecef; /* Subtle hover effect */
}

.orderLink span {
    cursor: pointer;
    /* Override link default styles if needed */
}
.orderLink:hover span {
     background-color: transparent; /* Prevent background on link hover */
}




.statusCell {
  min-width: 220px; /* Give status column more space if needed */
  vertical-align: top; /* Align content to the top if it wraps */
}

.statusGroup {
  display: flex; /* For aligning label and control side-by-side */
  align-items: center;
  justify-content: center; /* Vertically align items in the group */
  gap: 0.5rem;       /* Space between checkbox/select and its label if label is separate */
}
.statusGroup:last-child {
  margin-bottom: 0; /* Remove margin from the last group in the cell */
}

.statusLabel {
  display: flex; /* To align checkbox and text */
  font-size: 0.9em;
  cursor: pointer;
  white-space: nowrap; /* Prevent label from wrapping too early */
  margin-bottom: 0px;
}

.statusLabel input[type="checkbox"] {
  margin-right: 6px;
  cursor: pointer;
  transform: scale(1.1);
  vertical-align: middle; 
}

.statusSelect {
  padding: 6px 8px; /* Slightly more padding */
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 0.9em;
  /* width: 100%; Remove if you want it to size to content or set specific width */
  min-width: 150px; /* Ensure dropdown is wide enough */
  box-sizing: border-box;
  background-color: white; /* Ensure background for select */
  cursor: pointer;
}
.statusSelect:disabled {
  background-color: #e9ecef; /* Lighter grey for disabled */
  cursor: not-allowed;
  color: #6c757d;
}

/* Styling for the "Ej Klar Anledning" label when it's separate */
.statusGroup label[htmlFor^="ejKlarReason-"] {
    font-weight: normal; /* Make it less prominent than main cell labels */
    margin-right: 0.5rem; /* Space between label and select */
    flex-shrink: 0; /* Prevent label from shrinking too much */
}

/* Alternative for the label of the dropdown (if you want label and select on same line) */
.ejKlarReasonLabel {
    font-size: 0.9em;
    margin-right: 0.5rem;
    color: #555;
}

/* Ensure edit input doesn't overlap other status controls if they are in the same cell */
.editInput.statusEdit { /* Add a specific class if needed */
    width: calc(100% - 10px); /* Example adjustment */
}


.helpButton {
  background-color: #6c757d; /* Grey or a neutral info color */
  color: white;
  padding: 0.6rem 1rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s ease;
  margin-right: auto; /* Pushes create button to the right */
}
.helpButton:hover {
  background-color: #5a6268;
}


/* --- Simple Modal Styles --- */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem; /* Padding for smaller screens */
}

.modalContent {
  background: #fff;
  padding: 1.5rem 2rem; /* Adjust padding */
  border-radius: 8px;
  max-width: 550px; /* Adjust width */
  width: 95%;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.25);
  max-height: 90vh; /* Max height */
  overflow-y: auto; /* Scroll if content overflows */
  text-align: left; /* Align text left for info */
}

.modalTitle {
  margin-top: 0;
  margin-bottom: 1.5rem;
  font-size: 1.5rem;
  color: #333;
  text-align: center;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.75rem;
}

.helpSection {
  margin-bottom: 1.2rem;
}

.helpSection h3 {
  font-size: 1.1rem;
  color: #0056b3; /* A highlight color */
  margin-top: 0;
  margin-bottom: 0.5rem;
}

.helpSection ul {
  list-style-type: disc; /* Or none if you prefer */
  padding-left: 20px;
  margin: 0;
}

.helpSection li {
  margin-bottom: 0.3rem;
  color: #444;
  font-size: 0.95rem;
  line-height: 1.5;
}

.helpSection li strong {
    color: #222; /* Make codes stand out */
}


.modalCloseButton {
  display: block; /* Make it a block to center it */
  margin: 1.5rem auto 0 auto; /* Center and add space above */
  padding: 0.7rem 1.5rem;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s ease;
}

.modalCloseButton:hover {
  background-color: #0056b3;
}

  
  /* Basic Responsive Table (Stacking) - Adjust as needed */
  @media screen and (max-width: 768px) {
      .klupplistaContainer table, .klupplistaContainer thead, .klupplistaContainer tbody, .klupplistaContainer th, .klupplistaContainer td, .klupplistaContainer tr {
          display: block;
      }
  
      .klupplistaContainer thead tr {
          position: absolute;
          top: -9999px;
          left: -9999px;
      }
  
      .klupplistaContainer tr {
          border: 1px solid #ccc;
          margin-bottom: 0.5rem;
       }
  
      .klupplistaContainer td {
          border: none;
          border-bottom: 1px solid #eee;
          position: relative;
          padding-left: 50%; /* Space for label */
          text-align: right; /* Align content to the right */
      }
  
      .klupplistaContainer td:before {
          /* Use the data-label attribute for labels */
          content: attr(data-label);
          position: absolute;
          left: 6px;
          width: 45%; /* Width of the label */
          padding-right: 10px;
          white-space: nowrap;
          text-align: left; /* Align label text left */
          font-weight: bold;
      }
  
       /* Hide Pos column label on mobile? */
      .positionCell:before {
          content: "Position";
      }
  
       /* Adjust move buttons for mobile */
       .positionCell {
           padding-left: 0; /* Override padding */
           text-align: center;
       }
       .positionCell span {
           display: inline-block;
           margin: 0 0.5rem;
       }
       .positionCell:before {
           /* Hide default label or adjust */
           content: "Flytta";
           width: auto; /* Let it size naturally */
           position: static; /* Default positioning */
           padding-right: 5px;
           font-weight: bold;
       }

       .statusCell {
        padding-left: 50% !important; /* Ensure label space is consistent */
        min-width: 0; /* Allow it to stack */
    }
    .statusCell:before {
        content: "Status"; /* Ensure the main label is shown */
    }
    .statusGroup {
        flex-direction: row; /* Keep label and control on same line */
        justify-content: flex-end; /* Align to the right where data is */
        margin-bottom: 8px;
        width: 100%; /* Ensure it takes available space for alignment */
    }
    .statusGroup label[htmlFor^="ejKlarReason-"] {
         /* For mobile, you might want to hide the text label if space is tight
            and rely on the main cell :before pseudo-element if clear enough,
            or let it wrap.
         */
        /* display: none; */ /* Example to hide label text */
        white-space: normal;
        flex-basis: 40%; /* Give label some space */
        text-align: left;
    }
    .statusSelect {
        flex-grow: 1; /* Allow select to take remaining space */
        max-width: none; /* Allow it to fill */
    }
    .statusLabel input[type="checkbox"] {
        margin-left: auto; /* Push checkbox to the right of its label text on mobile */
    }
  }